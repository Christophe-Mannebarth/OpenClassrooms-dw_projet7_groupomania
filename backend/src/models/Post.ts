// IMPORT PACKAGE
import mongoose from 'mongoose'

// VALIDATION OF POST FORM INPUT
/**
 * Checks the field entries of the post form:
 *  - compare the field string with the Regexp
 *    and return "true" or "false" that indicates
 *    whether or not the pattern exists in the string.
 * @param {String} title    Post title
 * @param {String} postContent Post postContent
 * @returns {Boolean}      Return true or false
 */
let inputValidation = function (title: string, postContent: string): boolean {
  let re = /^[a-zA-ZÀ-ÖØ-öø-ÿ0-9s'-.,!?]+$/
  //@ts-ignore
  return re.test(title), re.test(postContent)
}

/* Messages explaining validation denial reasons */
let errorMin = 'Lenght must be at least 3 chars'
let errorMax = 'Length must not exceed 30 chars'
let errorDescMax = 'Length must not exceed 300 chars'
let errorInput = 'Should contain alphabetics characters only'

// POST MODEL
/**
 * Creates a data schema that contains the desired fields for each "Post",
 * indicates their type as well as their character (mandatory or not).
 * Uses the Schema validation made available by "mongoose" for the validation of
 * the post form inputs.
 * No need to put a field for the Id since it is automatically generated by "mongoose".
 */
const postSchema = new mongoose.Schema({
  userId: { type: String, required: true },
  author: { type: String, required: true },
  title: {
    type: String,
    required: true,
    minLength: [3, errorMin],
    maxLength: [30, errorMax],
    validate: [inputValidation, errorInput],
  },
  postContent: {
    type: String,
    required: true,
    minLength: [3, errorMin],
    maxLength: [150, errorDescMax],
    validate: [inputValidation, errorInput],
  },
  imageUrl: { type: String, required: true },
  likes: { type: Number, required: true, default: 0 },
  dislikes: { type: Number, required: true, default: 0 },
  usersLiked: { type: [String], required: true, default: [] },
  usersDisliked: { type: [String], required: true, default: [] },
})

// EXPORT POST MODEL
/**
 * Exports this schema as a Mongoose model called "Post",
 * thereby making it available for our Express application.
 */
export default mongoose.model('Post', postSchema)
